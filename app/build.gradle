apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        multiDexEnabled true

        flavorDimensions "debug", "release"
    }

    signingConfigs {
        release {
            storeFile file("../yunlong_samples.jks")
            storePassword "SHIyunlong410"
            keyAlias "yunlong"
            keyPassword "SHIyunlong410"
        }

        debug {
            storeFile file("../yunlong_samples.jks")
            storePassword "SHIyunlong410"
            keyAlias "yunlong"
            keyPassword "SHIyunlong410"
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation project(':base')
    implementation rootProject.ext.implementation["org.jetbrains.kotlin"]
    implementation rootProject.ext.implementation["org.jetbrains.anko"]
    implementation rootProject.ext.implementation["com.android.support:appcompat"]
    implementation rootProject.ext.implementation["io.reactivex.rxjava2"]
    implementation rootProject.ext.implementation["com.trello.rxlifecycle2:rxlifecycle"]
    implementation rootProject.ext.implementation["com.trello.rxlifecycle2:rxlifecycle-components"]
    implementation rootProject.ext.implementation["com.trello.rxlifecycle2:rxlifecycle-android"]
    implementation rootProject.ext.implementation["com.jakewharton.rxbinding2:rxbinding"]
    implementation rootProject.ext.implementation["com.squareup.retrofit2:retrofit"]
    implementation rootProject.ext.implementation["com.squareup.retrofit2:converter-gson"]
    implementation rootProject.ext.implementation["com.squareup.retrofit2:adapter-rxjava2"]
    implementation rootProject.ext.implementation["com.google.code.gson:gson"]
    implementation rootProject.ext.implementation["com.google.auto.value:auto-value"]
    annotationProcessor rootProject.ext.implementation["com.google.auto.value:auto-value"]
    annotationProcessor rootProject.ext.implementation["com.ryanharter.auto.value:auto-value-parcel"]
    implementation rootProject.ext.implementation["com.ryanharter.auto.value:auto-value-gson"]
    annotationProcessor rootProject.ext.implementation["com.ryanharter.auto.value:auto-value-gson"]
    annotationProcessor rootProject.ext.implementation["com.gabrielittner.auto.value:auto-value-with"]
    testImplementation rootProject.ext.testImplementation["junit"]

}
